{"version":3,"file":"static/js/511.0079c1ae.chunk.js","mappings":"gRAEaA,EAAeC,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qPAaxBC,EAAeH,EAAAA,QAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+EAMxBG,EAAeL,EAAAA,QAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wD,kBCkD/BK,EAAeP,EAAAA,QAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mCAI9B,EApEa,WACX,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAkB9B,OAhBAG,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACb,IAAME,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEOC,EAAAA,EAAAA,IAAqBtB,GAAS,KAAD,EAA1CkB,EAAIC,EAAAI,KACVC,QAAQC,IAAIP,GACZX,EAAQW,EAAKZ,MAAMa,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAEnBK,QAAQC,IAAGN,EAAAO,IAAQ,QAEC,OAFDP,EAAAC,KAAA,GAEnBT,GAAa,GAAOQ,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEvB,kBAVY,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWbjB,GACF,GAAG,CAACb,IAEGU,GACLqB,EAAAA,EAAAA,KAACC,EAAAA,GAAG,CACFC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,cACVC,aAAc,CAAC,EACfC,aAAa,iBAGfC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACET,EAAAA,EAAAA,KAAClC,EAAY,CAAA2C,SAAC,SACblC,EAAKmC,OAAS,GACbV,EAAAA,EAAAA,KAACxC,EAAY,CAAAiD,SACVlC,EAAKoC,KAAI,SAAAC,GAAK,OACbJ,EAAAA,EAAAA,MAAC5C,EAAY,CAAA6C,SAAA,CACVG,EAAMC,eACLb,EAAAA,EAAAA,KAAA,OACEc,IAAG,mCAAAC,OAAqCH,EAAMC,cAC9CG,IAAKJ,EAAMK,KACXb,MAAM,MACND,OAAO,SAGXH,EAAAA,EAAAA,KAAA,KAAAS,SACGG,EAAMK,KAAOL,EAAMK,KAAO,uCAE7BT,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,aACU,IACVG,EAAMM,UACHN,EAAMM,UACN,8CAhBWN,EAAMO,GAkBV,OAInBnB,EAAAA,EAAAA,KAAChC,EAAY,CAAAyC,SAAC,oCAItB,C,gOCnEAW,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAEHC,EAAmB,eAAAvC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMqC,GAAM,IAAAC,EAAArC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACtB8B,EAAAA,EAAAA,IAAU,oBAAqB,CACpDG,QAAME,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAM,IACTG,QAASL,MAEV,KAAD,EALU,OAKVG,EAAApC,EAAAI,KALML,EAAIqC,EAAJrC,KAAIC,EAAAuC,OAAA,SAOLxC,GAAI,wBAAAC,EAAAS,OAAA,GAAAX,EAAA,KACZ,gBAT+B0C,GAAA,OAAA7C,EAAAe,MAAA,KAAAC,UAAA,KAanB8B,EAAc,eAAAC,GAAA9C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA8C,EAAM9D,GAAO,IAAA+D,EAAA7C,EAAA,OAAAF,IAAAA,MAAA,SAAAgD,GAAA,cAAAA,EAAA5C,KAAA4C,EAAA3C,MAAA,cAAA2C,EAAA3C,KAAA,EAClB8B,EAAAA,EAAAA,IAAU,SAADL,OAAU9C,GAAW,CACnDsD,OAAQ,CACNG,QAASL,KAEV,KAAD,EAJU,OAIVW,EAAAC,EAAAzC,KAJML,EAAI6C,EAAJ7C,KAAI8C,EAAAN,OAAA,SAKLxC,GAAI,wBAAA8C,EAAApC,OAAA,GAAAkC,EAAA,KACZ,gBAP0BG,GAAA,OAAAJ,EAAAhC,MAAA,KAAAC,UAAA,KASdoC,EAAqB,eAAAC,GAAApD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoD,EAAMpE,GAAO,IAAAqE,EAAAnD,EAAA,OAAAF,IAAAA,MAAA,SAAAsD,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MAAA,cAAAiD,EAAAjD,KAAA,EACzB8B,EAAAA,EAAAA,IAAU,SAADL,OAAU9C,EAAO,WAAW,CAC1DsD,OAAQ,CACNG,QAASL,KAEV,KAAD,EACgB,OADhBiB,EAAAC,EAAA/C,KAJML,EAAImD,EAAJnD,KAKRM,QAAQC,IAAIP,GAAMoD,EAAAZ,OAAA,SACXxC,GAAI,wBAAAoD,EAAA1C,OAAA,GAAAwC,EAAA,KACZ,gBARiCG,GAAA,OAAAJ,EAAAtC,MAAA,KAAAC,UAAA,KAUrBR,EAAoB,eAAAkD,GAAAzD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAyD,EAAMzE,GAAO,IAAA0E,EAAAxD,EAAA,OAAAF,IAAAA,MAAA,SAAA2D,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAtD,KAAA,EACxB8B,EAAAA,EAAAA,IAAU,SAADL,OAAU9C,EAAO,YAAY,CAC3DsD,OAAQ,CACNG,QAASL,KAEV,KAAD,EAJU,OAIVsB,EAAAC,EAAApD,KAJML,EAAIwD,EAAJxD,KAAIyD,EAAAjB,OAAA,SAMLxC,GAAI,wBAAAyD,EAAA/C,OAAA,GAAA6C,EAAA,KACZ,gBARgCG,GAAA,OAAAJ,EAAA3C,MAAA,KAAAC,UAAA,KAUpB+C,EAAuB,eAAAC,GAAA/D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA+D,EAAM/E,GAAO,IAAAgF,EAAA9D,EAAA,OAAAF,IAAAA,MAAA,SAAAiE,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,cAAA4D,EAAA5D,KAAA,EAC3B8B,EAAAA,EAAAA,IAAU,SAADL,OAAU9C,EAAO,YAAY,CAC3DsD,OAAQ,CACNG,QAASL,KAEV,KAAD,EACgB,OADhB4B,EAAAC,EAAA1D,KAJML,EAAI8D,EAAJ9D,KAKRM,QAAQC,IAAIP,GAAM+D,EAAAvB,OAAA,SACXxC,GAAI,wBAAA+D,EAAArD,OAAA,GAAAmD,EAAA,KACZ,gBARmCG,GAAA,OAAAJ,EAAAjD,MAAA,KAAAC,UAAA,KAUvBqD,EAAiB,eAAAC,GAAArE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqE,EAAM/B,GAAM,IAAAgC,EAAApE,EAAA,OAAAF,IAAAA,MAAA,SAAAuE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,cAAAkE,EAAAlE,KAAA,EACpB8B,EAAAA,EAAAA,IAAU,eAAgB,CAC/CG,QAAME,EAAAA,EAAAA,GAAA,CACJC,QAASL,GACNE,KAEJ,KAAD,EALU,OAKVgC,EAAAC,EAAAhE,KALML,EAAIoE,EAAJpE,KAAIqE,EAAA7B,OAAA,SAMLxC,GAAI,wBAAAqE,EAAA3D,OAAA,GAAAyD,EAAA,KACZ,gBAR6BG,GAAA,OAAAJ,EAAAvD,MAAA,KAAAC,UAAA,I","sources":["components/Cast/StyledCast.js","components/Cast/Cast.jsx","services/movies-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCastUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  gap: 20px;\n  margin-top: 70px;\n  font-size: 18px;\n  max-width: 840px;\n  padding-bottom: 30px;\n`;\n\nexport const StyledCastLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledCastH2 = styled.h2`\n  display: flex;\n  justify-content: center;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCastToMovieById } from 'services/movies-api';\nimport { StyledCastH2, StyledCastLi, StyledCastUl } from './StyledCast';\nimport styled from 'styled-components';\nimport { Dna } from 'react-loader-spinner';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getCast = async () => {\n      try {\n        const data = await fetchCastToMovieById(movieId);\n        console.log(data);\n        setCast(data.cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return isLoading ? (\n    <Dna\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  ) : (\n    <div>\n      <StyledCastH2>Cast</StyledCastH2>\n      {cast.length > 0 ? (\n        <StyledCastUl>\n          {cast.map(actor => (\n            <StyledCastLi key={actor.id}>\n              {actor.profile_path && (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${actor.profile_path}`}\n                  alt={actor.name}\n                  width=\"150\"\n                  height=\"200\"\n                />\n              )}\n              <p>\n                {actor.name ? actor.name : 'No information about actor`s name'}\n              </p>\n              <p>\n                Character:{' '}\n                {actor.character\n                  ? actor.character\n                  : 'No information about actor`s character'}\n              </p>\n            </StyledCastLi>\n          ))}\n        </StyledCastUl>\n      ) : (\n        <StyledPlugH2>No cast information available</StyledPlugH2>\n      )}\n    </div>\n  );\n};\n\nconst StyledPlugH2 = styled.h2`\n  padding-bottom: 50px;\n`;\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f041ed3a64ad49a5d8fa59f2cf7de502';\n\nexport const fetchTrendingMovies = async params => {\n  const { data } = await axios.get('trending/all/week', {\n    params: {\n      ...params,\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data;\n};\n\n//api.themoviedb.org/3/movie/{movie_id}\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchVideoToMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/videos`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\nexport const fetchCastToMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  // console.log(data);\n  return data;\n};\n\nexport const fetchReviewsToMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  console.log(data);\n  return data;\n};\n\nexport const fetchMovieByQuery = async params => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return data;\n};\n\n// https://api.themoviedb.org/3/search/movie\n"],"names":["StyledCastUl","styled","_templateObject","_taggedTemplateLiteral","StyledCastLi","_templateObject2","StyledCastH2","_templateObject3","StyledPlugH2","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchCastToMovieById","sent","console","log","t0","finish","stop","apply","arguments","_jsx","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","_jsxs","children","length","map","actor","profile_path","src","concat","alt","name","character","id","axios","API_KEY","fetchTrendingMovies","params","_yield$axios$get","_objectSpread","api_key","abrupt","_x","fetchMovieById","_ref2","_callee2","_yield$axios$get2","_context2","_x2","fetchVideoToMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x3","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchReviewsToMovieById","_ref5","_callee5","_yield$axios$get5","_context5","_x5","fetchMovieByQuery","_ref6","_callee6","_yield$axios$get6","_context6","_x6"],"sourceRoot":""}