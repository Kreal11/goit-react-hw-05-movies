{"version":3,"file":"static/js/278.a331c770.chunk.js","mappings":"iOA2DA,UAtDe,WACb,IAAAA,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAChBG,GAAWC,EAAAA,EAAAA,MAEjBC,GAA4BC,EAAAA,EAAAA,MAAiBC,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAAtCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAAQF,EAAOG,IAAI,UAAY,GAqBrC,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEAC,EAAAA,EAAAA,IAAkB,CAAEZ,MAAAA,IAAS,KAAD,EAAzCQ,EAAIC,EAAAI,KAEVzB,EAAeoB,EAAKM,SAASL,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,iCAAAA,EAAAO,OAAA,GAAAT,EAAA,kBAEhC,kBANmB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAOpBf,GACF,GAAG,CAACH,KAGFmB,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPC,EAAAA,EAAAA,KAAA,SAAO/B,MAAOA,EAAOgC,SArBJ,SAAAC,GACnBhC,EAASgC,EAAEC,OAAOlC,MACpB,EAmBiDmC,KAAK,UAClDJ,EAAAA,EAAAA,KAAA,UAAQI,KAAK,SAASC,QAlBF,WACtB5B,EAAUR,EAAQ,CAAES,MAAOT,GAAU,CAAC,EACxC,EAgBmD8B,SAAC,YAGhDC,EAAAA,EAAAA,KAAA,MAAAD,SACGrB,EACCb,EAAYyC,OACC,OAAXzC,QAAW,IAAXA,OAAW,EAAXA,EAAa0C,KAAI,SAAAC,GAAK,IAAAC,EAAAC,EAAA,OACpBV,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CAACC,GAAIJ,EAAMK,GAAGC,WAAYC,MAAO,CAAEC,KAAM7C,GAAW4B,SAC7B,QAD6BU,EAC3C,QAD2CC,EACtDF,EAAMS,aAAK,IAAAP,EAAAA,EAAIF,EAAMU,YAAI,IAAAT,EAAAA,EAAID,EAAMW,iBAF/BX,EAAMK,GAIV,KAGPb,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+CAGNC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BAKd,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import React, { Suspense, useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieByQuery } from 'services/movies-api';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [value, setValue] = useState('');\n  const location = useLocation();\n\n  const [search, setSearch] = useSearchParams();\n  const query = search.get('query') || '';\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSetSearch = () => {\n    setSearch(value ? { query: value } : {});\n  };\n\n  useEffect(() => {\n    const getFoundMovies = async () => {\n      try {\n        const data = await fetchMovieByQuery({ query });\n        // console.log(data);\n        setFoundMovies(data.results);\n      } catch (error) {}\n    };\n    getFoundMovies();\n  }, [query]);\n\n  return (\n    <Suspense>\n      <input value={value} onChange={handleChange} type=\"text\" />\n      <button type=\"button\" onClick={handleSetSearch}>\n        Search\n      </button>\n      <ul>\n        {query ? (\n          foundMovies.length ? (\n            foundMovies?.map(movie => (\n              <li key={movie.id}>\n                <Link to={movie.id.toString()} state={{ from: location }}>\n                  {movie.title ?? movie.name ?? movie.original_name}\n                </Link>\n              </li>\n            ))\n          ) : (\n            <h3>Sorry, there are no movies by your search</h3>\n          )\n        ) : (\n          <h3>Start your search</h3>\n        )}\n      </ul>\n    </Suspense>\n  );\n};\n\nexport default Movies;\n"],"names":["_useState","useState","_useState2","_slicedToArray","foundMovies","setFoundMovies","_useState3","_useState4","value","setValue","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","search","setSearch","query","get","useEffect","getFoundMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchMovieByQuery","sent","results","t0","stop","apply","arguments","_jsxs","Suspense","children","_jsx","onChange","e","target","type","onClick","length","map","movie","_ref2","_movie$title","Link","to","id","toString","state","from","title","name","original_name"],"sourceRoot":""}