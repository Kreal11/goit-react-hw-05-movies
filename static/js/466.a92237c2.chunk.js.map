{"version":3,"file":"static/js/466.a92237c2.chunk.js","mappings":"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","sources":["pages/MovieDetails/StyledMovieDetails.js","pages/MovieDetails/MovieDetails.jsx","services/movies-api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieWrapper = styled.div`\n  color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  flex-wrap: wrap;\n`;\n\nexport const StyledDescrWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 60px;\n  text-align: justify;\n  max-width: 800px;\n  margin-bottom: 30px;\n`;\n\nexport const StyledTitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  text-align: center;\n`;\n\nexport const StyledTextWrapper = styled.div`\n  display: flex;\n  margin: auto;\n  gap: 60px;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledInfoMovieWrapper = styled.div`\n  gap: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledMovieNavLink = styled(NavLink)`\n  transition: color 0.3s, box-shadow 0.3s, background-color 0.3s;\n  border-radius: 5px;\n  padding: 4px;\n  max-width: 70px;\n\n  &.active {\n    color: white;\n  }\n  &:hover {\n    background-color: white;\n    color: black;\n    box-shadow: 0 0 15px white;\n  }\n`;\n\nexport const StyledCastReviewWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  text-transform: uppercase;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\n","import React, { Suspense, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useParams } from 'react-router-dom';\nimport { fetchVideoToMovieById, fetchMovieById } from 'services/movies-api.js';\nimport {\n  StyledCastReviewWrapper,\n  StyledDescrWrapper,\n  StyledInfoMovieWrapper,\n  StyledMovieNavLink,\n  StyledMovieWrapper,\n  StyledTextWrapper,\n  StyledTitleWrapper,\n} from './StyledMovieDetails';\nimport { Dna } from 'react-loader-spinner';\nimport styled from 'styled-components';\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const goBackRef = useRef(location.state?.from || '/');\n  const [error, setError] = useState('');\n  const [movie, setMovie] = useState({});\n  const [video, setVideo] = useState({});\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovie = async () => {\n      try {\n        const movieInfo = await fetchMovieById(movieId);\n        const { results } = await fetchVideoToMovieById(movieId);\n        setMovie(movieInfo);\n        setVideo(results);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n  if (error) {\n    navigate('/404');\n  }\n\n  if (isLoading) {\n    return (\n      <StyledSpinnerWrapper>\n        <Dna\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"dna-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"dna-wrapper\"\n        />\n      </StyledSpinnerWrapper>\n    );\n  }\n  return (\n    <StyledMovieWrapper>\n      <StyledDescrWrapper>\n        <StyledTitleWrapper>\n          <StyledMovieNavLink to={goBackRef.current}>\n            Go back\n          </StyledMovieNavLink>\n          <h2>{movie.title !== '' ? movie.title : 'No title assigned yet'}</h2>\n        </StyledTitleWrapper>\n        <StyledTextWrapper>\n          {movie.poster_path && (\n            <img\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n              alt=\"\"\n              width=\"250\"\n              height=\"350\"\n            />\n          )}\n\n          <StyledInfoMovieWrapper>\n            <p>\n              Rate:{' '}\n              {movie.vote_average ? `${movie.vote_average}/10` : 'No rate yet'}\n            </p>\n            <p>\n              Description:{' '}\n              {movie.overview !== '' ? movie.overview : 'No description yet'}\n            </p>\n            <p>\n              Genres:{' '}\n              {movie.genres?.length\n                ? movie.genres?.map(genre => genre.name).join(', ')\n                : 'The movie has not yet been assigned any genre'}\n            </p>\n          </StyledInfoMovieWrapper>\n        </StyledTextWrapper>\n      </StyledDescrWrapper>\n      {video && (\n        <iframe\n          title={video}\n          width=\"560\"\n          height=\"315\"\n          src={`https://www.youtube.com/embed/${video[0]?.key}`}\n        ></iframe>\n      )}\n      <StyledCastReviewWrapper>\n        <StyledMovieNavLink to=\"cast\">Cast</StyledMovieNavLink>\n        <StyledMovieNavLink to=\"reviews\">Reviews</StyledMovieNavLink>\n      </StyledCastReviewWrapper>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </StyledMovieWrapper>\n  );\n};\n\nconst StyledSpinnerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  margin: 0 auto;\n  padding: 40px 0;\n`;\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'f041ed3a64ad49a5d8fa59f2cf7de502';\n\nexport const fetchTrendingMovies = async params => {\n  const { data } = await axios.get('trending/all/week', {\n    params: {\n      ...params,\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchVideoToMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/videos`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchCastToMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchReviewsToMovieById = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return data;\n};\n\nexport const fetchMovieByQuery = async params => {\n  const { data } = await axios.get('search/movie', {\n    params: {\n      api_key: API_KEY,\n      ...params,\n    },\n  });\n  return data;\n};\n"],"names":["StyledMovieWrapper","styled","_templateObject","_taggedTemplateLiteral","StyledDescrWrapper","_templateObject2","StyledTitleWrapper","_templateObject3","StyledTextWrapper","_templateObject4","StyledInfoMovieWrapper","_templateObject5","StyledMovieNavLink","NavLink","_templateObject6","StyledCastReviewWrapper","_templateObject7","StyledSpinnerWrapper","_location$state","_movie$genres","_movie$genres2","_video$","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","movieId","useParams","navigate","useNavigate","location","useLocation","goBackRef","useRef","state","from","_useState3","_useState4","error","setError","_useState5","_useState6","movie","setMovie","_useState7","_useState8","video","setVideo","useEffect","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieInfo","_yield$fetchVideoToMo","results","_context","prev","next","fetchMovieById","sent","fetchVideoToMovieById","t0","console","log","message","finish","stop","apply","arguments","_jsx","children","Dna","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","_jsxs","to","current","title","poster_path","src","concat","alt","vote_average","overview","genres","length","map","genre","name","join","key","Suspense","Outlet","axios","API_KEY","fetchTrendingMovies","params","_yield$axios$get","data","_objectSpread","api_key","abrupt","_x","_ref2","_callee2","_yield$axios$get2","_context2","_x2","_ref3","_callee3","_yield$axios$get3","_context3","_x3","fetchCastToMovieById","_ref4","_callee4","_yield$axios$get4","_context4","_x4","fetchReviewsToMovieById","_ref5","_callee5","_yield$axios$get5","_context5","_x5","fetchMovieByQuery","_ref6","_callee6","_yield$axios$get6","_context6","_x6"],"sourceRoot":""}